import {types} from './utils.js';
import Component from './component.js';
import flatpickr from 'flatpickr';
import moment from 'moment';

/**
  * –ö–ª–∞—Å—Å —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
  */
export default class PointEdit extends Component {
  /**
   * –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä PointEdit.
   *
   * @constructor
   * @param {Object} point - –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞
   * @param {number} index - –∏–Ω–¥–µ–∫—Å
   * @this  {PointEdit}
   */
  constructor(point, index) {
    super();
    this._index = index;
    this._name = point.name;
    this._description = point.description;
    this._type = point.type.replace(point.type[0], point.type[0].toUpperCase());
    this._date = point.date;
    this._duration = point.duration;
    this._price = point.price;
    this._offers = point.offers;
    this._photos = point.photos;
    this._onSubmit = null;
    this._onDelete = null;
    this._onFormSubmit = this._onFormSubmit.bind(this);
    this._onDeleteButtonClick = this._onDeleteButtonClick.bind(this);
  }

  /**
   * –ú–µ—Ç–æ–¥-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É Save.
   * @param {Object} evt - –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è Event
   */
  _onFormSubmit(evt) {
    evt.preventDefault();
    const formData = new FormData(this._element.querySelector(`form`));
    const newData = this._processForm(formData);

    if (typeof this._onSubmit === `function`) {
      this._onSubmit(newData);
    }

    this.update(newData);
  }

  /**
   * –ú–µ—Ç–æ–¥-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É Delete (reset —Ñ–æ—Ä–º—ã).
   * @param {Object} evt - –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è Event
   */
  _onDeleteButtonClick(evt) {
    evt.preventDefault();
    if (typeof this._onDelete === `function`) {
      this._onDelete();
    }
  }

  /**
   * –°–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–ª–±—ç–∫–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É Save.
   * @param {Function} fn - –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–∫–æ–ª–±—ç–∫
   */
  set onSubmit(fn) {
    this._onSubmit = fn;
  }

  /**
   * –°–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–ª–±—ç–∫–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É Delete.
   * @param {Function} fn - –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–∫–æ–ª–±—ç–∫
   */
  set onDelete(fn) {
    this._onDelete = fn;
  }

  /**
   * –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞.
   *
   * @return  {string} —à–∞–±–ª–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
   */
  get template() {
    const offers = this._offers.filter((offer) => offer.types.includes(this._type)).map((offer) => {
      // const captionWithDashes = offer.caption.toLowerCase().split(` `).join(`-`);
      return `
      <input class="point__offers-input visually-hidden" type="checkbox" id="${offer.caption}-${this._index}" name="offer" value="${offer.caption}"${offer.isChecked ? ` checked` : ``}>
      <label for="${offer.caption}-${this._index}" class="point__offers-label">
        <span class="point__offer-service">${offer.caption}</span> + ‚Ç¨<span class="point__offer-price">${offer.price}</span>
      </label>
      `;
    }).join(``);

    const images = this._photos.map((photo) => `
      <img src="${photo}" alt="picture from place" class="point__destination-image">
    `).join(``);

    return `<article class="point">
      <form action="" method="get">
        <header class="point__header">
          <label class="point__date">
            choose day
            <input class="point__input" type="text" placeholder="MAR 18" name="day">
          </label>

          <div class="travel-way">
            <label class="travel-way__label" for="travel-way__toggle-${this._index}">${types.get(this._type).icon}</label>

            <input type="checkbox" class="travel-way__toggle visually-hidden" id="travel-way__toggle-${this._index}">

            <div class="travel-way__select">
              <div class="travel-way__select-group">
                <input class="travel-way__select-input visually-hidden" type="radio" id="travel-way-taxi-${this._index}" name="travel-way" value="taxi">
                <label class="travel-way__select-label" for="travel-way-taxi-${this._index}">üöï taxi</label>

                <input class="travel-way__select-input visually-hidden" type="radio" id="travel-way-bus-${this._index}" name="travel-way" value="bus">
                <label class="travel-way__select-label" for="travel-way-bus-${this._index}">üöå bus</label>

                <input class="travel-way__select-input visually-hidden" type="radio" id="travel-way-train-${this._index}" name="travel-way" value="train">
                <label class="travel-way__select-label" for="travel-way-train-${this._index}">üöÇ train</label>

                <input class="travel-way__select-input visually-hidden" type="radio" id="travel-way-flight-${this._index}" name="travel-way" value="train" checked>
                <label class="travel-way__select-label" for="travel-way-flight-${this._index}">‚úàÔ∏è flight</label>
              </div>

              <div class="travel-way__select-group">
                <input class="travel-way__select-input visually-hidden" type="radio" id="travel-way-check-in-${this._index}" name="travel-way" value="check-in">
                <label class="travel-way__select-label" for="travel-way-check-in-${this._index}">üè® check-in</label>

                <input class="travel-way__select-input visually-hidden" type="radio" id="travel-way-sightseeing-${this._index}" name="travel-way" value="sight-seeing">
                <label class="travel-way__select-label" for="travel-way-sightseeing-${this._index}">üèõ sightseeing</label>
              </div>
            </div>
          </div>

          <div class="point__destination-wrap">
            <label class="point__destination-label" for="destination-${this._index}">${this._type} ${types.get(this._type).preposition}</label>
            <input class="point__destination-input" list="destination-select" id="destination-${this._index}" value="${this._name}" name="destination">
            <datalist id="destination-select-${this._index}">
              <option value="airport"></option>
              <option value="Geneva"></option>
              <option value="Chamonix"></option>
              <option value="hotel"></option>
            </datalist>
          </div>

          <label class="point__time">
            choose time
            <input class="point__input" type="text" value="${moment(this._date).format(`HH:mm`)}" name="time" placeholder="00:00 ‚Äî 00:00">
          </label>

          <label class="point__price">
            write price
            <span class="point__price-currency">‚Ç¨</span>
            <input class="point__input" type="text" value="${this._price}" name="price">
          </label>

          <div class="point__buttons">
            <button class="point__button point__button--save" type="submit">Save</button>
            <button class="point__button" type="reset">Delete</button>
          </div>

          <div class="paint__favorite-wrap">
            <input type="checkbox" class="point__favorite-input visually-hidden" id="favorite-${this._index}" name="favorite">
            <label class="point__favorite" for="favorite-${this._index}">favorite</label>
          </div>
        </header>

        <section class="point__details">
          <section class="point__offers">
            <h3 class="point__details-title">offers</h3>

            <div class="point__offers-wrap">${offers}
            </div>

          </section>
          <section class="point__destination">
            <h3 class="point__details-title">Destination</h3>
            <p class="point__destination-text">${this._description}</p>
            <div class="point__destination-images">${images}
            </div>
          </section>
          <input type="hidden" class="point__total-price" name="total-price" value="">
        </section>
      </form>
    </article>`;
  }

  /**
    * –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞–≤–µ—à–∏–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
    */
  _createListeners() {
    this._element.querySelector(`form`).addEventListener(`submit`, this._onFormSubmit);
    this._element.querySelector(`form .point__buttons button[type="reset"]`).addEventListener(`click`, this._onDeleteButtonClick);
    const pointInput = this.element.querySelector(`input[name="time"]`);
    pointInput.style.outline = `1px solid red`;

    flatpickr(pointInput, {mode: `multiple`, conjunction: ` - `, enableTime: true, noCalendar: false, altInput: true, altFormat: `H:i`, dateFormat: `H:i`});
  }

  /**
    * –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
    */
  _removeListeners() {
    this._element.querySelector(`form`).removeEventListener(`submit`, this._onFormSubmit);
    this._element.querySelector(`form .point__buttons button[type="reset"]`).removeEventListener(`click`, this._onDeleteButtonClick);
  }

  /**
    * –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
    * @param {Object} point - –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    */
  update(point) {
    this._name = point.name;
    this._description = point.description;
    this._type = point.type.replace(point.type[0], point.type[0].toUpperCase());
    this._date = point.date;
    this._duration = point.duration;
    this._price = point.price;
    this._offers = point.offers;
    this._photos = point.photos;
  }

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–Ω—è—Ç–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É.
   * @param {Array} formData - –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã (–º–∞—Å—Å–∏–≤ –º–∞—Å—Å–∏–≤–æ–≤ [–ø–æ–ª–µ, –∑–Ω–∞—á–µ–Ω–∏–µ])
   * @return {Object} - –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ —Ñ–æ—Ä–º—ã
   */
  _processForm(formData) {
    const entry = {
      name: ``,
      type: ``,
      price: 0,
      offers: this._offers.map((offer) => Object.assign({}, offer, {isChecked: false})),
    };

    const taskEditMapper = PointEdit.createMapper.call(this, entry);

    for (const pair of formData.entries()) {
      const [property, value] = pair;
      if (taskEditMapper.hasOwnProperty(property)) {
        taskEditMapper[property](value);
      }
    }

    return entry;
  }

  /**
    * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
    * –ï–≥–æ –∑–∞–¥–∞—á–∞ - —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—è —Ñ–æ—Ä–º—ã —Å –ø–æ–ª—è–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –Ω–∏—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.
    * @param {Object} target - –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.
    * @return {Object} - –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, –ø–æ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –∏ –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ target.
    */
  static createMapper(target) {
    return {
      'time': (value) => (target.date = new Date(`${moment(this._date).format(`YYYY-MM-DD`)} ${value}`).getTime()),
      'price': (value) => (target.price = value),
      'travel-way': (value) => (target.type = value),
      'offer': (value) => (target.offers.find((offer) => offer.caption === value).isChecked = true),
      'destination': (value) => (target.name = value),
    };
  }
}
